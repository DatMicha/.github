name: Maven publish
on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]
env:
  FROM_NOTIFICATION_EMAIL_ADDRESS: 'do-not-reply@example.com'
jobs:
  maven-push:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Set up Maven
      uses: stCarolas/setup-maven@v3
      with:
        maven-version: 3.5.4
    - name: Run the Maven verify phase
      run: mvn -B verify --file pom.xml
    - name: Maven build
      run: mvn -s mvn-settings.xml -Dusername=${{ secrets.ARTIFACT_STORE_CLIENT_USERNAME }} -Dpassword=${{ secrets.ARTIFACT_STORE_CLIENT_PASSWORD }} compile
    - name: Maven test
      run: mvn -s mvn-settings.xml -Dusername=${{ secrets.ARTIFACT_STORE_CLIENT_USERNAME }} -Dpassword=${{ secrets.ARTIFACT_STORE_CLIENT_PASSWORD }} test
    - name: Maven generate Javadoc
      run: mvn -s mvn-settings.xml -Dusername=${{ secrets.ARTIFACT_STORE_CLIENT_USERNAME }} -Dpassword=${{ secrets.ARTIFACT_STORE_CLIENT_PASSWORD }} -DskipTests install javadoc:jar
    - name: Maven deploy
      run: |
        mvn -s mvn-settings.xml -Dusername=${{ secrets.ARTIFACT_STORE_CLIENT_USERNAME }} -Dpassword=${{ secrets.ARTIFACT_STORE_CLIENT_PASSWORD }} -DskipTests -DperformRelease deploy
    - name: Check existence of file pipeline-after.sh
      id: exists_pipeline_after
      uses: andstor/file-existence-action@v1
      with:
        files: "pipeline-after.sh"
    - name: Execute after step, if file pipeline-after.sh exists
      if: steps.exists_pipeline_after.outputs.files_exists == 'true'
      run: |
        chmod +x ./pipeline-after.sh
        ./pipeline-after.sh
  notification:
    needs: [maven-push]
    runs-on: self-hosted
    if: always()
    steps:
    - uses: actions/checkout@v2
    - name: set workflow conclusion
      uses: technote-space/workflow-conclusion-action@v1
    - name: conclusion
      run: |
        echo ${{ env.WORKFLOW_CONCLUSION }}
    - name: Check existence of file .teamschannel
      id: exists_teamschannel
      uses: andstor/file-existence-action@v1
      with:
        files: ".teamschannel"
    - name: Read teams channel from file
      id: teamschannel
      if: contains( env.WORKFLOW_CONCLUSION, 'failure' ) && steps.exists_teamschannel.outputs.files_exists == 'true'
      run: |
        teams_channel=$(cat .teamschannel)
        echo "::set-output name=webhook-url::$teams_channel"
    - name: Send message to ms teams
      if: contains( env.WORKFLOW_CONCLUSION, 'failure' ) && steps.exists_teamschannel.outputs.files_exists == 'true'
      uses: aliencube/microsoft-teams-actions@v0.8.0
      with:
        webhook_uri: ${{ steps.teamschannel.outputs.webhook-url }}
        title: Github Workflow Status
        summary: Maven Push failed
        sections: '[{ "activityTitle": "Failed!!!",  "activitySubtitle": "Event triggered by ${{ github.event.head_commit.author.name }}", "activityText": "**Push failed**" }]'
        actions: '[{ "@context": "http://schema.org", "@type": "OpenUri", "name": "Review Commit Diffs", "targets": [{ "os": "default", "uri": "${{ github.event.compare }}" }] }]'
    - name: Check existence of file .watchers
      id: exists_watchers
      uses: andstor/file-existence-action@v1
      with:
        files: ".watchers"
    - name: Read watchers from file
      id: watchers
      if: contains( env.WORKFLOW_CONCLUSION, 'failure' ) && steps.exists_watchers.outputs.files_exists == 'true'
      run: |
        watchers=$(cat .watchers)
        echo "::set-output name=email-ids::$watchers"
    - name: Send a notification mail
      if: contains( env.WORKFLOW_CONCLUSION, 'failure' ) && steps.exists_watchers.outputs.files_exists == 'true'
      uses: wadeww/send-email-action@master
      with:
        server_address: ${{ secrets.SMTP_SERVER_ADDRESS }}
        port: 25
        subject: Github Workflow failed
        body: |
          Hi Users,
          Maven push failed.
        to: ${{ steps.watchers.outputs.email-ids }}
        from: ${{ env.FROM_NOTIFICATION_EMAIL_ADDRESS }}
